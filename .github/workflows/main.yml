name: Build and deploy Jekyll site to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  jekyll:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    # Setup Java
    #- uses: actions/setup-java@v1
    #  with:
    #    java-version: '8' # The JDK version to make available on the path.
    #    java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk

    # Setup node
    #- uses: actions/setup-node@v2
    #  with:
    #    node-version: '12'
    
    # NPM install packages
    #- name: Install npm packages
    #  run: npm install -g bpmn-js-cmd @mermaid-js/mermaid-cli

    #- name: add bin to path
      #run: echo "$(npm bin)" >> $GITHUB_PATH
      #run: echo "/opt/hostedtoolcache/node/12.20.2/x64/bin" >> $GITHUB_PATH
      #run: echo "$JAVA_HOME/bin" >> $GITHUB_PATH
      #run: echo "NPM BIN is $(npm bin)"
      #run: echo "GITHUB_PATH is $GITHUB_PATH"
    
    - name: show path
      #run: echo "$GITHUB_PATH"
      run: echo "$PATH"

    # Use GitHub Actions' cache to shorten build times and decrease load on servers
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    # Jekyll source location, target branch (optional)
    - uses: helaili/jekyll-action@v2
      #env:
        # env variable to skip download (@mermaid-js/mermaid-cli)
        #PUPPETEER_SKIP_DOWNLOAD: true
        #PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
        #PUPPETEER_PRODUCT: firefox
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        jekyll_src: './'
        target_branch: 'gh-pages'
        pre_build_commands: apk --update add openjdk8 graphviz nodejs npm && npm install --unsafe-perm=true -g bpmn-js-cmd @mermaid-js/mermaid-cli
     